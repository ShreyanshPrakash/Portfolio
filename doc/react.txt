1. routing :

<Route component={NoMatch} />

For wildcard, either dont pass any path, and use the above one or use ** as path and pass the component to render


2. MUST MUSTR React route for nested chidren

<BrowserRouter>

  <Route path="/" component={Frontpage} exact />
  <Route path="/home" component={HomePage} />
  <Route path="/about" component={AboutPage} />

  <Route
    path="/admin"
    render={({ match: { url } }) => (       <---- nested desctructuring and then use render props to nest the routes
      <>
        <Route path={`${url}/`} component={Backend} exact />
        <Route path={`${url}/home`} component={Dashboard} />
        <Route path={`${url}/users`} component={UserPage} />
      </>
    )}
  />

</BrowserRouter>


3. USeCallback is a method hence u need to call it...not like arrow methods where u pass the function as value and then just
refer that variable in the code.

const data = useCallback( () => somethinds , [] );

<p>{ data() }</p>


4. MUST MUST React hooks

useEffect( () => {
        useDispatch( GetPageContentAction( ) );
    }, [ useDispatch ] )

the above is an error as all the hooks must be called only inside the context of functional component or custom react hook.

const dispatch = useDispatch();

useEffect( () => {
        dispatch( GetPageContentAction( ) );
    }, [ useDispatch ] )


5. For axios error, always return err.response from action else wont get anything in the reducer.



6. How to handle keys for multiple api calls from multiple component ?

well, in most of the cases, backend is gonna send the key.U can use that directly.

// backend
res.json({
            [ req.params.documentId ]: content
        });

// reducer
return{
                ...state,
                uiState: new UIStateModel(),
                error : new UIErrorModel(),
                success : {
                    success: true,
                    successMessage : action.payload.statusText,
                    successResponse: action.payload.data
                },
                ...action.payload.data     <---- just spread it and the key name coming from the backend will be used.
            }


7. V important:

U should not use render props and component props in the same <route>, render will be ignored then.
Use render prop itself to decide what component to load